version: "3.9"

services:
  app:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
      - RABBIT_HOST=rabbitmq
      - DB_PORT=${DB_PORT}
      - REDIS_PORT=${REDIS_PORT}
      - RABBIT_PORT=${RABBIT_PORT:-5672}
    volumes:
      - .:/app
    restart: always

  consumer:
    build: .
    command: ["faststream", "run", "consumer:app"]
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=${RABBIT_PORT:-5672}
    restart: always

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_LOGIN:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASSWORD:-guest}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  db_data:
  redis_data:
  rabbitmq_data: